A=class Node:
B=    def __init__(self, data=None):
C=      self.data = data
D=        self.next = None
E=class SLinkedList:
F=    def __init__(self):
G=        self.head = None
H=    def Atbegining(self, data_in):
I=        NewNode = Node(data_in)
J=        NewNode.next = self.head        
K=		  self.head = NewNode                                     
K1=# Function to remove node
L=    def RemoveNode(self, Removekey): 
M=        HeadVal = self.head 
N=        if (HeadVal is not None):
O=            if (HeadVal.data == Removekey):
P=                self.head = HeadVal.next
Q=                HeadVal = None
R=                return
S=        while (HeadVal is not None):
T=            if HeadVal.data == Removekey:
U=                break
V=            prev = HeadVal
W=            HeadVal = HeadVal.next
X=        if (HeadVal == None):
Y=            return 
Z=        prev.next = HeadVal.next
AA=        HeadVal = None
BB=    def LListprint(self):
CC=        printval = self.head
DD=        while (printval):
EE=            print(printval.data),
FF=            print
GG=            printval = printval.next
HH=print("ORIGINAL LIST")
II=print("*************")
JJ=llist = SLinkedList()
KK=llist.Atbegining("Mon")
LL=llist.Atbegining("Tue")
MM=llist.Atbegining("Wed")
NN=llist.Atbegining("Thu")
OO=llist.LListprint()
PP=print("AFTER DELETION")
QQ=print("**************")
RR=llist.RemoveNode("Tue")
SS=llist.LListprint()