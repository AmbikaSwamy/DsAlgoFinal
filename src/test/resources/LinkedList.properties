A=class Node:
B=    # Singly linked node
C=    def __init__(self, data=None):
D=        self.data = data
E=        self.next = None
F=class singly_linked_list:
G=    def __init__(self):
H=        # Create an empty list
I=        self.head = None
J=        self.tail = None
K=        self.count = 0
L=    def iterate_item(self):
M=        # Iterate the list.
N=        current_item = self.head
O=        while current_item:
P=            val = current_item.data
Q=            current_item = current_item.next
R=            yield val
S=    def append_item(self, data):
T=        #Append items on the list
U=        node = Node(data)
V=        if self.tail:
W=            self.tail.next = node
X=            self.tail = node
Y=        else:
Z=            self.head = node
AA=           self.tail = node
BB=        self.count += 1
CC=items = singly_linked_list()
DD=items.append_item('PHP')
EE=items.append_item('Python')
FF=items.append_item('C#')
GG=items.append_item('C++')
HH=items.append_item('Java')
II=for val in items.iterate_item():
JJ=    print(val)
KK=print("head.data: ",items.head.data)
LL=print("tail.data: ",items.tail.data)